{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. About ORCID ORCID provides a persistent identifier for researchers AND tools (like APIs) to help make connections between researchers, their contributions, and affiliations. Why? To help people find information, and to simplify reporting and analysis. ORCID wants to help make it possible to do things like: Find all of a researcher\u2019s work with a single query Auto-populate manuscript submission and grant application forms Find the current affiliation(s) of any researcher ORCID can't do this on its own - integrations with other systems (like manuscript submission/production, funding application, repository, research information, and directory systems) are essential. About this tutorial This tutorial provides an introduction to integrating ORCID into your systems, so that, together, we can help everyone involved in research spend more time making contributions and less time managing them! In this tutorial you will learn: The types of ORCID APIs and what you can do with them How to get set up with the ORCID Sandbox to test your API integration How to read and search information from the public API What a Client ID and Client Secret is and how to use them How to get an access token using the mysterious 3-legged OAuth process Pre-requisites To complete this tutorial, you'll need the following tools: Web browser: ( that's up to date ) Internet connection Plain text editor: TextEdit (Mac), Notepad++ (Win), or your preferred plain text editor Software capable of making HTTP requests: Examples in this doc use Google OAuth Playground You can also use: cURL : Free, command-line application available for Mac or Windows (pre-installed on most Mac OS versions; accessible within Terminal application) Or other online tools, like Insomnia or Postman Once you have got to grips with the APIs you can use our Swagger graphical interface. About the ORCID APIs ORCID's web interface gives researchers a way to interact with their record, but the real power of ORCID lies in the underlying data, which can be accessed by people and systems via Application Programming Interfaces (APIs). Public API: Free to anyone with an ORCID iD Member API: Available to ORCID member organizations (Sandbox Member API freely available for testing) Premium Member API Available to ORCID premium member organizations (Sandbox Member API freely available for testing) Features Public API Member API Premium Member API Authenticate: Get a user\u2019s authenticated ORCID iD yes yes yes Read (Public): Read public data on ORCID records yes yes yes Create: Help researchers register for an ORCID iD using our create-on-demand process yes yes yes Read (Limited): Read limited-access data on ORCID records no yes yes Add: Post new items to a record no yes yes Update: Edit or delete items you previously added no yes yes Integration with your system using an API client no yes one only yes up to five Webhooks: Receive notifications of updates to your users' ORCID records no no yes All of the ORCID APIs are based on the same set of technologies: REST: ORCID APIs are \"RESTful\", which means that they use HTTP to transfer information. OAuth: ORCID APIs use the OAuth 2.0 authentication protocol to grant client applications access to users' ORCID records. XML/JSON: ORCID APIs support data exchange in either XML or JSON format. Learn more about the ORCID APIs","title":"1. Introduction"},{"location":"#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"#about-orcid","text":"ORCID provides a persistent identifier for researchers AND tools (like APIs) to help make connections between researchers, their contributions, and affiliations. Why? To help people find information, and to simplify reporting and analysis. ORCID wants to help make it possible to do things like: Find all of a researcher\u2019s work with a single query Auto-populate manuscript submission and grant application forms Find the current affiliation(s) of any researcher ORCID can't do this on its own - integrations with other systems (like manuscript submission/production, funding application, repository, research information, and directory systems) are essential.","title":"About ORCID"},{"location":"#about-this-tutorial","text":"This tutorial provides an introduction to integrating ORCID into your systems, so that, together, we can help everyone involved in research spend more time making contributions and less time managing them! In this tutorial you will learn: The types of ORCID APIs and what you can do with them How to get set up with the ORCID Sandbox to test your API integration How to read and search information from the public API What a Client ID and Client Secret is and how to use them How to get an access token using the mysterious 3-legged OAuth process","title":"About this tutorial"},{"location":"#pre-requisites","text":"To complete this tutorial, you'll need the following tools: Web browser: ( that's up to date ) Internet connection Plain text editor: TextEdit (Mac), Notepad++ (Win), or your preferred plain text editor Software capable of making HTTP requests: Examples in this doc use Google OAuth Playground You can also use: cURL : Free, command-line application available for Mac or Windows (pre-installed on most Mac OS versions; accessible within Terminal application) Or other online tools, like Insomnia or Postman Once you have got to grips with the APIs you can use our Swagger graphical interface.","title":"Pre-requisites"},{"location":"#about-the-orcid-apis","text":"ORCID's web interface gives researchers a way to interact with their record, but the real power of ORCID lies in the underlying data, which can be accessed by people and systems via Application Programming Interfaces (APIs). Public API: Free to anyone with an ORCID iD Member API: Available to ORCID member organizations (Sandbox Member API freely available for testing) Premium Member API Available to ORCID premium member organizations (Sandbox Member API freely available for testing) Features Public API Member API Premium Member API Authenticate: Get a user\u2019s authenticated ORCID iD yes yes yes Read (Public): Read public data on ORCID records yes yes yes Create: Help researchers register for an ORCID iD using our create-on-demand process yes yes yes Read (Limited): Read limited-access data on ORCID records no yes yes Add: Post new items to a record no yes yes Update: Edit or delete items you previously added no yes yes Integration with your system using an API client no yes one only yes up to five Webhooks: Receive notifications of updates to your users' ORCID records no no yes All of the ORCID APIs are based on the same set of technologies: REST: ORCID APIs are \"RESTful\", which means that they use HTTP to transfer information. OAuth: ORCID APIs use the OAuth 2.0 authentication protocol to grant client applications access to users' ORCID records. XML/JSON: ORCID APIs support data exchange in either XML or JSON format. Learn more about the ORCID APIs","title":"About the ORCID APIs"},{"location":"Other_methods_for_getting_authenticated_iDs/","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. Other methods for getting authenticated iDs You have just followed a method a custom integration would use to get ORCIDs from users. The following are other methods for getting authenticated iDs from ORCID users. Servive Provider systems Some publishing, research information and repository software systems support collecting authenticated iDs and permissions right out of the box. See our list of ORCID-enabled systems for more details. Configuration steps and customization options vary widely between systems - check your system's documentation for complete information. DOI metadata Many systems now collect ORCID iDs and publish them in DOI (and other persistent identifier) metadata. If you have a DOI for a publication, dataset, or other digital object, you can check its metadata for author ORCID iDs. However, note ORCID cannot guarantee that the iDs for the listed authors have been authenticated. Example: CrossRef API For example, using the CrossRef REST API , we can find an author's ORCID iD in the DOI metadata for http://dx.doi.org/10.1155/2013/364301 In a new window or tab, visit https://api.crossref.org/v1/works/10.1155/2013/364301 In the JSON data that appears, ORCID iDs submitted by the publisher in the DOI metadata are included in the author element.","title":"9. Other methods for getting authenticated iDs"},{"location":"Other_methods_for_getting_authenticated_iDs/#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"Other_methods_for_getting_authenticated_iDs/#other-methods-for-getting-authenticated-ids","text":"You have just followed a method a custom integration would use to get ORCIDs from users. The following are other methods for getting authenticated iDs from ORCID users.","title":"Other methods for getting authenticated iDs"},{"location":"Other_methods_for_getting_authenticated_iDs/#servive-provider-systems","text":"Some publishing, research information and repository software systems support collecting authenticated iDs and permissions right out of the box. See our list of ORCID-enabled systems for more details. Configuration steps and customization options vary widely between systems - check your system's documentation for complete information.","title":"Servive Provider systems"},{"location":"Other_methods_for_getting_authenticated_iDs/#doi-metadata","text":"Many systems now collect ORCID iDs and publish them in DOI (and other persistent identifier) metadata. If you have a DOI for a publication, dataset, or other digital object, you can check its metadata for author ORCID iDs. However, note ORCID cannot guarantee that the iDs for the listed authors have been authenticated.","title":"DOI metadata"},{"location":"Other_methods_for_getting_authenticated_iDs/#example-crossref-api","text":"For example, using the CrossRef REST API , we can find an author's ORCID iD in the DOI metadata for http://dx.doi.org/10.1155/2013/364301 In a new window or tab, visit https://api.crossref.org/v1/works/10.1155/2013/364301 In the JSON data that appears, ORCID iDs submitted by the publisher in the DOI metadata are included in the author element.","title":"Example: CrossRef API"},{"location":"display/","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. 7. DISPLAY: PRESENTING ORCID IN YOUR SYSTEM Display ORCID iDs Researchers want to know that using their iD in your system has had some effect. The best way to signal that the collected iD is actually put to use is to display it - in your web applications, in publications, with funding awards, etc. For authenticated iD's show the iD icon followed by the full iD URI, linked to the iD URI: https://orcid.org/0000-0002-1825-0097 For more details, see our Trademark and iD Display Guidelines You can also just show the iD icon next to the researcher's name as seen in the screenshot below. Presenting the ORCID OAuth screen & redirect pages In order to provide a consistent experience for users, we recommend following the guidelines below for presenting ORCID OAuth in your system. For more details, see our help doc on Presenting OAuth . 1. Use a button or link to connect users to ORCID via OAuth See example buttons and links 2. Include text describing ORCID and a link to the ORCID website See sample text 3. Present the OAuth sign-in screen as a popup or modal window The OAuth screen is designed to look best at a maximum width of 500px. 4. Provide an appropriate redirect page and close the OAuth window Remember that users can either authorize or deny access - make sure to show a different message for each case.","title":"7. DISPLAY&#58; Presenting ORCID in your system"},{"location":"display/#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"display/#7-display-presenting-orcid-in-your-system","text":"","title":"7. DISPLAY: PRESENTING ORCID IN YOUR SYSTEM"},{"location":"display/#display-orcid-ids","text":"Researchers want to know that using their iD in your system has had some effect. The best way to signal that the collected iD is actually put to use is to display it - in your web applications, in publications, with funding awards, etc. For authenticated iD's show the iD icon followed by the full iD URI, linked to the iD URI: https://orcid.org/0000-0002-1825-0097 For more details, see our Trademark and iD Display Guidelines You can also just show the iD icon next to the researcher's name as seen in the screenshot below.","title":"Display ORCID iDs"},{"location":"display/#presenting-the-orcid-oauth-screen-redirect-pages","text":"In order to provide a consistent experience for users, we recommend following the guidelines below for presenting ORCID OAuth in your system. For more details, see our help doc on Presenting OAuth .","title":"Presenting the ORCID OAuth screen &amp; redirect pages"},{"location":"display/#1-use-a-button-or-link-to-connect-users-to-orcid-via-oauth","text":"See example buttons and links","title":"1. Use a button or link to connect users to ORCID via OAuth"},{"location":"display/#2-include-text-describing-orcid-and-a-link-to-the-orcid-website","text":"See sample text","title":"2. Include text describing ORCID and a link to the ORCID website"},{"location":"display/#3-present-the-oauth-sign-in-screen-as-a-popup-or-modal-window","text":"The OAuth screen is designed to look best at a maximum width of 500px.","title":"3. Present the OAuth sign-in screen as a popup or modal window"},{"location":"display/#4-provide-an-appropriate-redirect-page-and-close-the-oauth-window","text":"Remember that users can either authorize or deny access - make sure to show a different message for each case.","title":"4. Provide an appropriate redirect page and close the OAuth window"},{"location":"get/","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. In a real world situation, you'll need to gather up iDs for researchers whose ORCID records you want to read, update, or associate with records in your own system AND get permission to take certain actions, like adding information to their ORCID records. In this section, we'll look at a few ways to get authenticated iDs and/or record access permission. Authenticated iDs ORCID is about disambiguation, it's important that you get the correct iD for each researcher. The best way to do this is to collect Authenticated ORCID iDs , which means that each researcher signs into their ORCID account and authorizes your system to obtain their iD. Learn more about Authenticated iDs Record access permission Control over access to data in your ORCID record is one of ORCID's core principles . While you can read public ORCID data without the record owner's involvement, some API actions require permission: Get an Authenticated ORCID iD Read non-public data (items with privacy set to 'Trusted parties') Add/update record data Custom integration The most customizable way to get Authenticated iDs is by building your own API integration. In this section, we'll walk through the steps that your own custom integration would need to complete in order to get an authenticated iD and record access permission. OAuth 2.0 Getting an Authenticated iD and record access permission from a user involves following OAuth 2.0 , an industry-standard protocol for authorization. OAuth allows a user to give a website or application access to account information stored on another site, without giving that site their password. If you've ever signed into a site using Google or Facebook instead of your credentials for that particular site, you've already used OAuth! The OAuth process includes 3 steps: Create an authorization URL Get an authorization code Exchange the authorization code for an access token Get API credentials API credentials consisting of a client ID and a client secret are needed in order to get Authenticated iDs and/or user permissions. To get Authenticated iDs, you can use Public or Member API credentials. To get permission to read non-public information or add/update researchers' ORCID records, you'll need Member API credentials. For the rest of this tutorial, when referring to the API please assume that it is the Member API that is being referenced. For this tutorial, please use your own sandbox API credentials. To request API credentials, see Request API credentials Three Step OAuth journey Create an authorization URL To kick off the OAuth process, we'll need to create a special authorization URL that sends users to an ORCID sign-in screen. This URL consists of Authorization endpoint , plus Parameters that identify your organization and the permissions you want to request. Authorization endpoint (Sandbox) https://sandbox.orcid.org/oauth/authorize Parameters Parameter Description Example client_id Your Member or Public API client ID (issued by ORCID) To request API credentials, see Request API credentials [APP-*****************] response_type code scope API action(s) you want to request permission for, from the list of ORCID Scopes /person/update /activities/update redirect_uri Page on your site that users will see after they complete the authorization process (must be on the list of allowed redirect URIs you specified when requesting your API credentials) https://developers.google.com/oauthplayground To request permission to add/update activities (affiliations, funding, works, peer review items), and to add/update personal items (other-names, keywords, countries, researcher-urls, websites, and personal external identifiers) our authorization URL will be: Enter you own client ID where it says [APP-****************] https://sandbox.orcid.org/oauth/authorize?client_id=[APP-****************]&response_type=code&scope=/read-limited%20/activities/update%20/person/update&redirect_uri=https://developers.google.com/oauthplayground Copy the URL, remembering to fill in your own APP details, paste it into a new tab and press enter. An ORCID sign-in screen will appear; sign into your Sandbox account to see the OAuth screen and click Authorize After granting permission, you'll be redirected to the Google OAuth Playground. A 6-character code will appear at the end of the redirect URI in the browser address bar (and under the Step 2 section on the left of the page) Exchange authorization code for access token and authenticated iD Once you have an Authorization Code, you can exchange it for an access token and the Authenticated iD of the user who signed in, which you'll need in order to take the API action(s) you requested permission for. If you lose the access token you can complete the process again but first you would need to revoke permission for the client application if using the same ORCID iD. Permission can be revoked by removing the client application from the \"Trusted organizations\" section in Account settings . In a real-world situation, this exchange would be done by your system, using a programming language such as PHP, Java, or Ruby on Rails. For this tutorial, we'll use Google OAuth Playground to simulate a web application. Click the gear icon in the upper right corner to open the OAuth 2.0 Configuration Change the Oauth endpoints drop-down to Custom and enter the following settings and click Close Field Value OAuth flow Server-side OAuth endpoints Custom Authorization endpoint https://sandbox.orcid.org/oauth/authorize Token endpoint https://sandbox.orcid.org/oauth/token access token location Authorization header w/Bearer prefix OAuth Client ID [APP-*****************] (Demo client ID created for this tutorial) OAuth Client Secret 0000000-0000-0000-0000-000000000000 (Your own client secret created earlier - do not share API client secrets!) In the Step 2 Exchange authorization code for tokens section at left, click Exchange authorization code for tokens Your access aoken and Authenticated iD will appear Request/Response section at right. Important! Keep the Google OAuth Playground open so that you don't lose the configurations you have made in the steps above. You can also save the URL that allows you to initialize the Playground with these configurations (to get the URL, click the link icon next to the gear icon in the upper right corner). Once you have gone through this process to obtain the token, this is all that you need to do further API calls for this ORCID and for these permissions. If you want to make calls for another ORCID or you want to write to a record where before you have only read for example, then you will need to complete the process again and get a new access token. Save this token It is important to save the token you received in the step above as you can easily create any calls you need to make with it. If you lose the token you will have to go through the whole process above again.","title":"3. GET&#58; authenticated iDs &amp; permission"},{"location":"get/#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"In a real world situation, you'll need to gather up iDs for researchers whose ORCID records you want to read, update, or associate with records in your own system AND get permission to take certain actions, like adding information to their ORCID records. In this section, we'll look at a few ways to get authenticated iDs and/or record access permission. Authenticated iDs ORCID is about disambiguation, it's important that you get the correct iD for each researcher. The best way to do this is to collect Authenticated ORCID iDs , which means that each researcher signs into their ORCID account and authorizes your system to obtain their iD. Learn more about Authenticated iDs Record access permission Control over access to data in your ORCID record is one of ORCID's core principles . While you can read public ORCID data without the record owner's involvement, some API actions require permission: Get an Authenticated ORCID iD Read non-public data (items with privacy set to 'Trusted parties') Add/update record data","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"get/#custom-integration","text":"The most customizable way to get Authenticated iDs is by building your own API integration. In this section, we'll walk through the steps that your own custom integration would need to complete in order to get an authenticated iD and record access permission. OAuth 2.0 Getting an Authenticated iD and record access permission from a user involves following OAuth 2.0 , an industry-standard protocol for authorization. OAuth allows a user to give a website or application access to account information stored on another site, without giving that site their password. If you've ever signed into a site using Google or Facebook instead of your credentials for that particular site, you've already used OAuth! The OAuth process includes 3 steps: Create an authorization URL Get an authorization code Exchange the authorization code for an access token","title":"Custom integration"},{"location":"get/#get-api-credentials","text":"API credentials consisting of a client ID and a client secret are needed in order to get Authenticated iDs and/or user permissions. To get Authenticated iDs, you can use Public or Member API credentials. To get permission to read non-public information or add/update researchers' ORCID records, you'll need Member API credentials. For the rest of this tutorial, when referring to the API please assume that it is the Member API that is being referenced. For this tutorial, please use your own sandbox API credentials. To request API credentials, see Request API credentials","title":"Get API credentials"},{"location":"get/#three-step-oauth-journey","text":"","title":"Three Step OAuth journey"},{"location":"get/#create-an-authorization-url","text":"To kick off the OAuth process, we'll need to create a special authorization URL that sends users to an ORCID sign-in screen. This URL consists of Authorization endpoint , plus Parameters that identify your organization and the permissions you want to request. Authorization endpoint (Sandbox) https://sandbox.orcid.org/oauth/authorize Parameters Parameter Description Example client_id Your Member or Public API client ID (issued by ORCID) To request API credentials, see Request API credentials [APP-*****************] response_type code scope API action(s) you want to request permission for, from the list of ORCID Scopes /person/update /activities/update redirect_uri Page on your site that users will see after they complete the authorization process (must be on the list of allowed redirect URIs you specified when requesting your API credentials) https://developers.google.com/oauthplayground To request permission to add/update activities (affiliations, funding, works, peer review items), and to add/update personal items (other-names, keywords, countries, researcher-urls, websites, and personal external identifiers) our authorization URL will be: Enter you own client ID where it says [APP-****************] https://sandbox.orcid.org/oauth/authorize?client_id=[APP-****************]&response_type=code&scope=/read-limited%20/activities/update%20/person/update&redirect_uri=https://developers.google.com/oauthplayground Copy the URL, remembering to fill in your own APP details, paste it into a new tab and press enter. An ORCID sign-in screen will appear; sign into your Sandbox account to see the OAuth screen and click Authorize After granting permission, you'll be redirected to the Google OAuth Playground. A 6-character code will appear at the end of the redirect URI in the browser address bar (and under the Step 2 section on the left of the page)","title":"Create an authorization URL"},{"location":"get/#exchange-authorization-code-for-access-token-and-authenticated-id","text":"Once you have an Authorization Code, you can exchange it for an access token and the Authenticated iD of the user who signed in, which you'll need in order to take the API action(s) you requested permission for. If you lose the access token you can complete the process again but first you would need to revoke permission for the client application if using the same ORCID iD. Permission can be revoked by removing the client application from the \"Trusted organizations\" section in Account settings . In a real-world situation, this exchange would be done by your system, using a programming language such as PHP, Java, or Ruby on Rails. For this tutorial, we'll use Google OAuth Playground to simulate a web application. Click the gear icon in the upper right corner to open the OAuth 2.0 Configuration Change the Oauth endpoints drop-down to Custom and enter the following settings and click Close Field Value OAuth flow Server-side OAuth endpoints Custom Authorization endpoint https://sandbox.orcid.org/oauth/authorize Token endpoint https://sandbox.orcid.org/oauth/token access token location Authorization header w/Bearer prefix OAuth Client ID [APP-*****************] (Demo client ID created for this tutorial) OAuth Client Secret 0000000-0000-0000-0000-000000000000 (Your own client secret created earlier - do not share API client secrets!) In the Step 2 Exchange authorization code for tokens section at left, click Exchange authorization code for tokens Your access aoken and Authenticated iD will appear Request/Response section at right. Important! Keep the Google OAuth Playground open so that you don't lose the configurations you have made in the steps above. You can also save the URL that allows you to initialize the Playground with these configurations (to get the URL, click the link icon next to the gear icon in the upper right corner). Once you have gone through this process to obtain the token, this is all that you need to do further API calls for this ORCID and for these permissions. If you want to make calls for another ORCID or you want to write to a record where before you have only read for example, then you will need to complete the process again and get a new access token. Save this token It is important to save the token you received in the step above as you can easily create any calls you need to make with it. If you lose the token you will have to go through the whole process above again.","title":"Exchange authorization code for access token and authenticated iD"},{"location":"post/","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. In this section, we'll add an education affiliation to our Sandbox record. As you have seen, you can use the API to GET (read) items on the record, and you can also POST (add), PUT (update), and DELETE any section of the record. The only things you need to change are the endpoints and the XML for each section. In the following example we are using the /education endpoint with the correct XML to add the information, but you can just as well add Employment or Works for example. See our Github documentation for more example files and endpoints and the permissions you need for each. Add an education affiliation Here's an example Education XML you can use for this exercise: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <education:education xmlns:common=\"http://www.orcid.org/ns/common\" xmlns:education=\"http://www.orcid.org/ns/education\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.orcid.org/ns/education ../education-3.0.xsd \"> <common:department-name>department-name</common:department-name> <common:role-title>role-title</common:role-title> <common:organization> <common:name>common:name</common:name> <common:address> <common:city>common:city</common:city> <common:region>common:region</common:region> <common:country>AF</common:country> </common:address> <common:disambiguated-organization> <common:disambiguated-organization-identifier>http://dx.doi.org/10.13039/100000001</common:disambiguated-organization-identifier> <common:disambiguation-source>FUNDREF</common:disambiguation-source> </common:disambiguated-organization> </common:organization> <common:url>http://tempuri.org</common:url> <common:external-ids> <common:external-id> <common:external-id-type>grant_number</common:external-id-type> <common:external-id-value>external-identifier-value</common:external-id-value> <common:external-id-url>http://tempuri.org</common:external-id-url> <common:external-id-relationship>self</common:external-id-relationship> </common:external-id> <common:external-id> <common:external-id-type>grant_number</common:external-id-type> <common:external-id-value>external-identifier-value2</common:external-id-value> <common:external-id-url>http://tempuri.org/2</common:external-id-url> <common:external-id-relationship>self</common:external-id-relationship> </common:external-id> </common:external-ids> </education:education> Still have that Google OAuth Playground window open? If so, continue with step 1 below. If not, you have two options: if you saved your authorization token from earlier fill out the Oauth Playground window as you had it on Read the record if not, go back and repeat the Get an authorization code and Exchange authorization code for an access token steps from the previous section before moving on to the steps below. Beneath Step 3: Configure request to API , set HTTP Method to POST . In the Request URI field enter: https://api.sandbox.orcid.org/v3.0/[ORCID ID]/education Replace [ORCID ID] with the iD for your Sandbox record, format XXXX-XXXX-XXXX-XXXX Click Content-type > Custom and enter application/vnd.orcid+xml Click Add , then click Close . Click Enter request body . Copy the education affiliation XML at the top of this section and paste it into the Request Body text box OPTIONAL: In the Request Body text box, edit the XML to reflect your institution. For <disambiguated-organization-identifier> , use the Ringgold Identify database to find the Ringgold ID for your institution (you'll need to register a free Ringgold account in order to search the database). Click Close . Click Send the request . The results will appear in the Request/Response section at right. Scroll to the bottom \u2013 if you see HTTP/1.1 201 Created , your education affiliation was successfully added! Visit the public view of your Sandbox record at https://sandbox.orcid.org/[ORCID ID] to see your new education affiliation. Notice that Source shows the name of the API client that added the affiliation - this is a key element that helps other systems consuming ORCID data determine whether this piece of information is authoritative. *","title":"5. POST&#58; an affiliation"},{"location":"post/#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"In this section, we'll add an education affiliation to our Sandbox record. As you have seen, you can use the API to GET (read) items on the record, and you can also POST (add), PUT (update), and DELETE any section of the record. The only things you need to change are the endpoints and the XML for each section. In the following example we are using the /education endpoint with the correct XML to add the information, but you can just as well add Employment or Works for example. See our Github documentation for more example files and endpoints and the permissions you need for each.","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"post/#add-an-education-affiliation","text":"Here's an example Education XML you can use for this exercise: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <education:education xmlns:common=\"http://www.orcid.org/ns/common\" xmlns:education=\"http://www.orcid.org/ns/education\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.orcid.org/ns/education ../education-3.0.xsd \"> <common:department-name>department-name</common:department-name> <common:role-title>role-title</common:role-title> <common:organization> <common:name>common:name</common:name> <common:address> <common:city>common:city</common:city> <common:region>common:region</common:region> <common:country>AF</common:country> </common:address> <common:disambiguated-organization> <common:disambiguated-organization-identifier>http://dx.doi.org/10.13039/100000001</common:disambiguated-organization-identifier> <common:disambiguation-source>FUNDREF</common:disambiguation-source> </common:disambiguated-organization> </common:organization> <common:url>http://tempuri.org</common:url> <common:external-ids> <common:external-id> <common:external-id-type>grant_number</common:external-id-type> <common:external-id-value>external-identifier-value</common:external-id-value> <common:external-id-url>http://tempuri.org</common:external-id-url> <common:external-id-relationship>self</common:external-id-relationship> </common:external-id> <common:external-id> <common:external-id-type>grant_number</common:external-id-type> <common:external-id-value>external-identifier-value2</common:external-id-value> <common:external-id-url>http://tempuri.org/2</common:external-id-url> <common:external-id-relationship>self</common:external-id-relationship> </common:external-id> </common:external-ids> </education:education> Still have that Google OAuth Playground window open? If so, continue with step 1 below. If not, you have two options: if you saved your authorization token from earlier fill out the Oauth Playground window as you had it on Read the record if not, go back and repeat the Get an authorization code and Exchange authorization code for an access token steps from the previous section before moving on to the steps below.","title":"Add an education affiliation"},{"location":"post/#_1","text":"Beneath Step 3: Configure request to API , set HTTP Method to POST . In the Request URI field enter: https://api.sandbox.orcid.org/v3.0/[ORCID ID]/education Replace [ORCID ID] with the iD for your Sandbox record, format XXXX-XXXX-XXXX-XXXX Click Content-type > Custom and enter application/vnd.orcid+xml Click Add , then click Close . Click Enter request body . Copy the education affiliation XML at the top of this section and paste it into the Request Body text box OPTIONAL: In the Request Body text box, edit the XML to reflect your institution. For <disambiguated-organization-identifier> , use the Ringgold Identify database to find the Ringgold ID for your institution (you'll need to register a free Ringgold account in order to search the database). Click Close . Click Send the request . The results will appear in the Request/Response section at right. Scroll to the bottom \u2013 if you see HTTP/1.1 201 Created , your education affiliation was successfully added! Visit the public view of your Sandbox record at https://sandbox.orcid.org/[ORCID ID] to see your new education affiliation. Notice that Source shows the name of the API client that added the affiliation - this is a key element that helps other systems consuming ORCID data determine whether this piece of information is authoritative. *","title":""},{"location":"put/","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. In a real-world situation, you may need to update a researcher's affiliation. In this section, we'll update our education affiliation to include an end date. A little about put codes Put codes are short numeric codes that reference a particular item on the ORCID record. You use the put code with the API calls to update, delete or read a particular item (as opposed to a summary of items.) When you post an item to a researcher's record, the API response will contain the put code for that item. You can store the put code to use it later if you need to read, update, or delete that item. To find out the put code for a particular item we don't have, we just need to read the record or a summary of the section where that item is located. The put code for the item we want to modify will be returned in the response. In the example below we are updating a single education item. Update an education affiliation Note: if you saved the put code for your education affiliation, you can skip to step 4 below. If you didn't save the put code, please start with step 1 below. First we need to get a put code for the education affiliation you just added so open a new Google Playground window and set it up following the first 4 steps from the Read the record . This time in the Request URI field enter https://api.sandbox.orcid.org/v3.0/0000-XXXX-XXXX-XXXX/educations . Note that we have added /educations to the end of the URI and that it is plural. This means we are fetching a summary of all the education items on this record, not just one (we would put it singular and added the /put-code of the item at the end) Hit the 'Send the request' and you should see something like the image below in the Request/Response section. Find the put-code for the education affiliation that you added in the previous section (it will be a different number to the one highlighted here). Change HTTP Method to PUT Click Add Headers and make sure that Accept and Content-type are both set to application/vnd.orcid+xml In the Request URI field enter: https://api.sandbox.orcid.org/v3.0/[ORCID ID]/education/[PUT CODE] Replace [ORCID ID] with the iD for your Sandbox record, format XXXX-XXXX-XXXX-XXXX and [PUT CODE] with the put-code for your education affiliation Grab the XML from the POST section again and the click Enter request body and paste it in. Inside the <education:education tag, add put-code=[PUT CODE] Replace [PUT CODE] with the put-code for your education affiliation, ex <education:education put-code=\"26971\" Copy the XML below which includes a start and end date for your education affiliation and paste it beneath the </common:role-title> tag and above the <common:organization> tag (as seen on the screenshot below) <common:start-date> <common:year>1948</common:year> <common:month>02</common:month> <common:day>02</common:day> </common:start-date> <common:end-date> <common:year>1948</common:year> <common:month>02</common:month> <common:day>02</common:day> </common:end-date> Click Close . Click Send the Request . The results will appear in the Request/Response section at right. Scroll to the bottom \u2013 if you see HTTP/1.1 200 OK , your education affiliation was successfully updated! If you see an error message, check that the header values in Add headers have not been changed to garbled text, ex: application%2Fvnd.orcid%2Bxml\" Visit the public view of your Sandbox record at https://sandbox.orcid.org/[ORCID ID] to see your updated education affiliation.","title":"6. PUT&#58; Update an affiliation"},{"location":"put/#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"In a real-world situation, you may need to update a researcher's affiliation. In this section, we'll update our education affiliation to include an end date.","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"put/#a-little-about-put-codes","text":"Put codes are short numeric codes that reference a particular item on the ORCID record. You use the put code with the API calls to update, delete or read a particular item (as opposed to a summary of items.) When you post an item to a researcher's record, the API response will contain the put code for that item. You can store the put code to use it later if you need to read, update, or delete that item. To find out the put code for a particular item we don't have, we just need to read the record or a summary of the section where that item is located. The put code for the item we want to modify will be returned in the response. In the example below we are updating a single education item.","title":"A little about put codes"},{"location":"put/#update-an-education-affiliation","text":"Note: if you saved the put code for your education affiliation, you can skip to step 4 below. If you didn't save the put code, please start with step 1 below. First we need to get a put code for the education affiliation you just added so open a new Google Playground window and set it up following the first 4 steps from the Read the record . This time in the Request URI field enter https://api.sandbox.orcid.org/v3.0/0000-XXXX-XXXX-XXXX/educations . Note that we have added /educations to the end of the URI and that it is plural. This means we are fetching a summary of all the education items on this record, not just one (we would put it singular and added the /put-code of the item at the end) Hit the 'Send the request' and you should see something like the image below in the Request/Response section. Find the put-code for the education affiliation that you added in the previous section (it will be a different number to the one highlighted here). Change HTTP Method to PUT Click Add Headers and make sure that Accept and Content-type are both set to application/vnd.orcid+xml In the Request URI field enter: https://api.sandbox.orcid.org/v3.0/[ORCID ID]/education/[PUT CODE] Replace [ORCID ID] with the iD for your Sandbox record, format XXXX-XXXX-XXXX-XXXX and [PUT CODE] with the put-code for your education affiliation Grab the XML from the POST section again and the click Enter request body and paste it in. Inside the <education:education tag, add put-code=[PUT CODE] Replace [PUT CODE] with the put-code for your education affiliation, ex <education:education put-code=\"26971\" Copy the XML below which includes a start and end date for your education affiliation and paste it beneath the </common:role-title> tag and above the <common:organization> tag (as seen on the screenshot below) <common:start-date> <common:year>1948</common:year> <common:month>02</common:month> <common:day>02</common:day> </common:start-date> <common:end-date> <common:year>1948</common:year> <common:month>02</common:month> <common:day>02</common:day> </common:end-date> Click Close . Click Send the Request . The results will appear in the Request/Response section at right. Scroll to the bottom \u2013 if you see HTTP/1.1 200 OK , your education affiliation was successfully updated! If you see an error message, check that the header values in Add headers have not been changed to garbled text, ex: application%2Fvnd.orcid%2Bxml\" Visit the public view of your Sandbox record at https://sandbox.orcid.org/[ORCID ID] to see your updated education affiliation.","title":"Update an education affiliation"},{"location":"read/","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. Read the record Important! Make sure you have added something to your record before going any further. The subsequent calls won't work properly otherwise. Skip back to Add info to your Sandbox record if you are unsure about this. The next thing we can do with our newly acquired access token is to read the record. This is the next logical step and a useful way of acquiring put-codes that you will need for the PUT step later. Return to the browser tab for Google Playground. If you didn't keep the tab open, you can re-initialize the session with the URL you saved earlier (Clicking OK on the warning that comes up). Or you can set up for the call again by filling all the relevant fields, making sure they look like the screenshots below: Make sure the configuration has your client ID and client secret below Step 2 you should have your access token filled in It should either still have the token from earlier or you can fill it in from the previous exercise like so: Beneath Step 3 Click Add headers , enter the values below, then click Add and Close Header name: Accept Header value: application/vnd.orcid+xml The step 3 Configurations should look like the screenshot below: Set the HTTP Method to GET . In the request URI field enter : https://api.sandbox.orcid.org/v3.0/0000-XXXX-XXXX-XXXX/record Replace [ORCID ID] with the iD for your Sandbox record, format XXXX-XXXX-XXXX-XXXX Note: the endpoint is the word at the end of the URI. In this case we are reading a summary of the whole record so we end the URL with /record as shown above. Click Send the request In the Request/Response field you should see an XML summary of the whole record. It will look a bit like the example below which shows the first part of the response. If you added something to your record as shown in Add info to your Sandbox record you should have at least one put-code returned as shown below :","title":"4. READ&#58; the record"},{"location":"read/#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"read/#read-the-record","text":"Important! Make sure you have added something to your record before going any further. The subsequent calls won't work properly otherwise. Skip back to Add info to your Sandbox record if you are unsure about this. The next thing we can do with our newly acquired access token is to read the record. This is the next logical step and a useful way of acquiring put-codes that you will need for the PUT step later. Return to the browser tab for Google Playground. If you didn't keep the tab open, you can re-initialize the session with the URL you saved earlier (Clicking OK on the warning that comes up). Or you can set up for the call again by filling all the relevant fields, making sure they look like the screenshots below: Make sure the configuration has your client ID and client secret below Step 2 you should have your access token filled in It should either still have the token from earlier or you can fill it in from the previous exercise like so: Beneath Step 3 Click Add headers , enter the values below, then click Add and Close Header name: Accept Header value: application/vnd.orcid+xml The step 3 Configurations should look like the screenshot below: Set the HTTP Method to GET . In the request URI field enter : https://api.sandbox.orcid.org/v3.0/0000-XXXX-XXXX-XXXX/record Replace [ORCID ID] with the iD for your Sandbox record, format XXXX-XXXX-XXXX-XXXX Note: the endpoint is the word at the end of the URI. In this case we are reading a summary of the whole record so we end the URL with /record as shown above. Click Send the request In the Request/Response field you should see an XML summary of the whole record. It will look a bit like the example below which shows the first part of the response. If you added something to your record as shown in Add info to your Sandbox record you should have at least one put-code returned as shown below :","title":"Read the record"},{"location":"resources/","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. Example implementations and workflow guides https://members.orcid.org Technical documentation ORCID Github ORCID API users group https://groups.google.com/group/orcid-api-users ORCID Support support@orcid.org API Tutorials https://github.com/ORCID/ORCID-Source/tree/master/orcid-api-web/tutorial","title":"8. RESOURCES"},{"location":"resources/#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"Example implementations and workflow guides https://members.orcid.org Technical documentation ORCID Github ORCID API users group https://groups.google.com/group/orcid-api-users ORCID Support support@orcid.org API Tutorials https://github.com/ORCID/ORCID-Source/tree/master/orcid-api-web/tutorial","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"sandbox/","text":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you. For this tutorial, we'll use ORCID's test environment, the ORCID Sandbox . The Sandbox works just like the production ORCID Registry, with a few exceptions: Sandbox only sends emails to mailinator.com addresses Import wizard tools don't work in the Sandbox Menu links to informational content (For Researchers, For Organizations, About, Help, etc) don't work in the Sandbox Sandbox doesn't contain production data Create a Sandbox ORCID record To get started, you'll need to register an ORCID iD in the Sandbox. In a new window or tab, visit https://sandbox.orcid.org/register . Complete the form with your first name and email address, and then click the \"next\" button. IMPORTANT! Don't use a real email address! Instead, make up an address ending in @mailinator.com (ex: sgarcia@mailinator.com). Complete step 2 of the registration form with a password, and move on to step 3. Select your preferred visibility setting, accept the terms of use, click the box next to the text \"I'm not a robot\", and finally click the \"register\" button. Remember the email and password - you'll need these throughout the rest of the tutorial! Verify your email address Before you can edit information on your ORCID record, you'll need to verify your email address. In a new window or tab, visit https://www.mailinator.com . Enter the @mailinator.com address you used to register your Sandbox account and click Go . Open the message with the subject [ORCID] Reminder to verify your email address and click the Verify your email address button. Log into ORCID, if prompted, to finish verifying your email. Since you've just registered, you are likely already logged in and will not be prompted to log in again. After verifying your email, you'll be redirected to your Sandbox record. Make note of the 16-digit iD for your Sandbox record - you'll need this throughout the rest of the tutorial! Add info to your Sandbox record Add a country: Click the pencil icon beside Country, choose a country and click Save changes . Add employment: In the Employment section, click Add employment , fill out the form and click Add to list . Take a look at your employment entry and notice the following fields, which are included with each item on an ORCID record: Source: Person or organization that added the item Privacy: Visibility setting for the item","title":"2. Set up the Sandbox"},{"location":"sandbox/#this-guide-now-lives-at-httpsinfoorcidorghands-on-with-the-orcid-api-please-go-there-for-the-latest-version-thank-you","text":"For this tutorial, we'll use ORCID's test environment, the ORCID Sandbox . The Sandbox works just like the production ORCID Registry, with a few exceptions: Sandbox only sends emails to mailinator.com addresses Import wizard tools don't work in the Sandbox Menu links to informational content (For Researchers, For Organizations, About, Help, etc) don't work in the Sandbox Sandbox doesn't contain production data","title":"This guide now lives at https://info.orcid.org/hands-on-with-the-orcid-api/ please go there for the latest version. Thank you."},{"location":"sandbox/#create-a-sandbox-orcid-record","text":"To get started, you'll need to register an ORCID iD in the Sandbox. In a new window or tab, visit https://sandbox.orcid.org/register . Complete the form with your first name and email address, and then click the \"next\" button. IMPORTANT! Don't use a real email address! Instead, make up an address ending in @mailinator.com (ex: sgarcia@mailinator.com). Complete step 2 of the registration form with a password, and move on to step 3. Select your preferred visibility setting, accept the terms of use, click the box next to the text \"I'm not a robot\", and finally click the \"register\" button. Remember the email and password - you'll need these throughout the rest of the tutorial!","title":"Create a Sandbox ORCID record"},{"location":"sandbox/#verify-your-email-address","text":"Before you can edit information on your ORCID record, you'll need to verify your email address. In a new window or tab, visit https://www.mailinator.com . Enter the @mailinator.com address you used to register your Sandbox account and click Go . Open the message with the subject [ORCID] Reminder to verify your email address and click the Verify your email address button. Log into ORCID, if prompted, to finish verifying your email. Since you've just registered, you are likely already logged in and will not be prompted to log in again. After verifying your email, you'll be redirected to your Sandbox record. Make note of the 16-digit iD for your Sandbox record - you'll need this throughout the rest of the tutorial!","title":"Verify your email address"},{"location":"sandbox/#add-info-to-your-sandbox-record","text":"Add a country: Click the pencil icon beside Country, choose a country and click Save changes . Add employment: In the Employment section, click Add employment , fill out the form and click Add to list . Take a look at your employment entry and notice the following fields, which are included with each item on an ORCID record: Source: Person or organization that added the item Privacy: Visibility setting for the item","title":"Add info to your Sandbox record"}]}